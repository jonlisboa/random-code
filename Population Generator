library(randomNames)
library(truncnorm)

#number of agents to generate
size<-100

#create data frame
population<-as.data.frame(matrix(,nrow=size,ncol=8))
colnames(population)<-c("ID","Name","Health","Race", "Gender","Age","Height", "Weight")

#Generate Age Distribution
age1<-as.integer(rtruncnorm(n=size, a=0, b=100, mean=20.4, sd=25.09))
age2<-as.integer(rtruncnorm(n=size, a=0, b=100, mean=60.4, sd=10.09))

plot(density(as.integer(age1)))
plot(density(as.integer(age2)))

w = rbinom(size, 1, .5)
agedist = w*age1 + (1-w)*age2
plot(density(agedist))
age<-as.integer(agedist)
population[,6]<-age

#Generate Names
#if you just want unique IDs for each agent:
population[,2]<- stri_rand_strings(size, 15)

#if you want real names
#population[,2]<-randomNames(length(population[,1]),gender=population[,5],ethnicity=population[,4])

#Generate Race
races<-c("Black", "White", "Asian", "Indigenous")
population[,4]<- sample(c(races), size, replace=TRUE, prob=c(0.5,0.48,0.01,0.01))

#Generate Gender

population[,5]<- sample(c("Male", "Female"), size, replace=TRUE, prob=c(0.49,0.51))

#Generate Height

AgeHeight<-population[,6]
AgeHeight[AgeHeight>20]<-20

height<-(runif(size, 0.35, 0.45)+AgeHeight*runif(size, 0.060, 0.067))

population[,7]<-height
population[population[,5]=="Male",7]<-population[population[,5]=="Male",7]*1.1

#Generate Weight

population[,8]<-21*population[,7]^2*runif(size,0.7,1.3)
population[population[,5]=="Male",8]<-population[population[,5]=="Male",8]*1.1


#Generate Health
population[,3]<- sample(c("Healthy","Sick","Immune","Dead"),length(population[,1]),replace=TRUE, prob=c(1,0.0,0,0))
